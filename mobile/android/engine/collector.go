// +build android

package engine

import "github.com/measurement-kit/engine/collector"

// Contains the results of resubmitting a report.
type MKEngineCollectorSubmitResults struct {
	rr collector.SubmitResults
}

// Returns whether the resubmission succeded.
func (rr *MKEngineCollectorSubmitResults) Good() bool {
	return rr.rr.Good
}

// Returns the updated measurement.
func (rr *MKEngineCollectorSubmitResults) UpdatedSerializedMeasurement() string {
	return rr.rr.UpdatedSerializedMeasurement
}

// Returns the updated report ID.
func (rr *MKEngineCollectorSubmitResults) UpdatedReportID() string {
	return rr.rr.UpdatedReportID
}

// Returns logs generated by resubmitting a report.
func (rr *MKEngineCollectorSubmitResults) Logs() string {
	return rr.rr.Logs
}

// Contains the settings for resubmitting a report.
type MKEngineCollectorSubmitTask struct {
	rs collector.SubmitTask
}

// Sets the measurement to resubmit.
func (rs *MKEngineCollectorSubmitTask) SetSerializedMeasurement(value string) {
	rs.rs.SerializedMeasurement = value
}

// Sets the timeout (in seconds) for the resubmission.
func (rs *MKEngineCollectorSubmitTask) SetTimeout(value int64) {
	rs.rs.Timeout = value
}

// The task for resubmitting measurements.
type MKEngineCollectorSubmitTask struct {
}

// Runs the resubmission task with specific settings and returns the results.
func (rt *MKEngineCollectorSubmitTask) Run(rs *MKEngineCollectorSubmitTask) *MKEngineCollectorSubmitResults {
	var rr MKEngineCollectorSubmitResults
	collector.SubmitInto(&rs.rs, &rr.rr)
	return &rr
}
